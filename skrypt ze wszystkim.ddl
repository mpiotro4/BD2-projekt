-- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
--   at:        2022-05-25 21:23:08 CEST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



CREATE USER bd2c074 IDENTIFIED BY account UNLOCK 
;

CREATE USER bd2c074_app IDENTIFIED BY account UNLOCK 
;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE czynnosci (
    id_czynnosci      NUMBER(5) NOT NULL,
    data_rozpoczecia  DATE NOT NULL,
    id_modulu         NUMBER(3) NOT NULL,
    id_kategorii      NUMBER(3) NOT NULL,
    id_pracownika     NUMBER(5) NOT NULL,
    id_czyn_nadrz     NUMBER(5),
    notatka           VARCHAR2(4000 CHAR),
    data_wykonania    DATE
)
LOGGING;

COMMENT ON TABLE czynnosci IS
    'Informacje o podjetej czynnosci oraz o czasie jej wykonania jesli zosta?a zakonczona';

COMMENT ON COLUMN czynnosci.data_rozpoczecia IS
    'Data rozpoczecia wykonywania czynnosci';

COMMENT ON COLUMN czynnosci.id_modulu IS
    'ID modu?u wobec ktï¿½rego wykonywana jest czynnosc';

COMMENT ON COLUMN czynnosci.id_kategorii IS
    'ID kategori do ktorej nalezy czynnosc';

COMMENT ON COLUMN czynnosci.id_pracownika IS
    'ID pracownika ktory wykonuje czynnosc';

COMMENT ON COLUMN czynnosci.id_czyn_nadrz IS
    'ID czynnosci nadrzednej';

COMMENT ON COLUMN czynnosci.notatka IS
    'Notatka dotyczaca wykonywanej czynnosci';

COMMENT ON COLUMN czynnosci.data_wykonania IS
    'Data zakonczenia wykonywania czynnosci';

CREATE INDEX czyn_prac_fk_idx ON
    czynnosci (
        id_pracownika
    ASC )
        LOGGING;

CREATE INDEX czyn_kat_fk_idx ON
    czynnosci (
        id_kategorii
    ASC )
        LOGGING;

CREATE INDEX czyn_mod_fk_idx ON
    czynnosci (
        id_modulu
    ASC )
        LOGGING;

CREATE INDEX czyn_czyn_fk_idx ON
    czynnosci (
        id_czyn_nadrz
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON czynnosci TO bd2c074_app;

ALTER TABLE czynnosci ADD CONSTRAINT czyn_pk PRIMARY KEY ( id_czynnosci );

CREATE TABLE kategorie (
    id_kategorii  NUMBER(3) NOT NULL,
    nazwa         VARCHAR2(100 CHAR) NOT NULL
)
LOGGING;

COMMENT ON TABLE kategorie IS
    'Spis wszystkich dostepnych kategorii czynnosci';

COMMENT ON COLUMN kategorie.nazwa IS
    'Nazwa kategorii do ktorej nalezy czynnosc';

GRANT SELECT, INSERT, UPDATE, DELETE ON kategorie TO bd2c074_app;

ALTER TABLE kategorie ADD CONSTRAINT kat_pk PRIMARY KEY ( id_kategorii );

ALTER TABLE kategorie ADD CONSTRAINT kat_un UNIQUE ( nazwa );

CREATE TABLE moduly (
    id_modulu           NUMBER(3) NOT NULL,
    nazwa               VARCHAR2(100 CHAR) NOT NULL,
    id_pracownika       NUMBER(5),
    data_zatwierdzenia  DATE
)
LOGGING;

COMMENT ON TABLE moduly IS
    'Informacje o module ktory poddawany jest danej czynnosci';

COMMENT ON COLUMN moduly.nazwa IS
    'Nazwa modulu poddawanego czynnosci';

COMMENT ON COLUMN moduly.id_pracownika IS
    'ID pracownika, ktory zatwierdza wykonanie czynnosci wobec modulu';

COMMENT ON COLUMN moduly.data_zatwierdzenia IS
    'Data zatwierdzenia tego ze czynnosc wobec modulu zosta?a wykonana';

CREATE INDEX mod_prac_fk_idx ON
    moduly (
        id_pracownika
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON moduly TO bd2c074_app;

ALTER TABLE moduly ADD CONSTRAINT mod_pk PRIMARY KEY ( id_modulu );

ALTER TABLE moduly ADD CONSTRAINT mod_uk UNIQUE ( nazwa );

CREATE TABLE pracownicy (
    id_pracownika   NUMBER(5) NOT NULL,
    data_urodzenia  DATE NOT NULL,
    email           VARCHAR2(100 CHAR) NOT NULL,
    nazwisko        VARCHAR2(100 CHAR) NOT NULL,
    imie            VARCHAR2(100 CHAR) NOT NULL,
    imie_2          VARCHAR2(100 CHAR),
    pesel           CHAR(11 CHAR)
)
LOGGING;

COMMENT ON TABLE pracownicy IS
    'Dane wszystkich pracownikow organizacji';

COMMENT ON COLUMN pracownicy.data_urodzenia IS
    'Data urodzenia pracownika';

COMMENT ON COLUMN pracownicy.email IS
    'Sluzbowy adres email pracownika';

COMMENT ON COLUMN pracownicy.nazwisko IS
    'Nazwisko pracownika';

COMMENT ON COLUMN pracownicy.imie IS
    'Imie pracownika';

COMMENT ON COLUMN pracownicy.imie_2 IS
    'Drugie imie pracownika';

COMMENT ON COLUMN pracownicy.pesel IS
    'Numer PESEL pracownika';

GRANT SELECT, INSERT, UPDATE, DELETE ON pracownicy TO bd2c074_app;

ALTER TABLE pracownicy ADD CONSTRAINT prac_pk PRIMARY KEY ( id_pracownika );

ALTER TABLE pracownicy ADD CONSTRAINT prac_pesel_uk UNIQUE ( pesel );

ALTER TABLE pracownicy
    ADD CONSTRAINT prac_uk UNIQUE ( imie,
                                    imie_2,
                                    nazwisko,
                                    data_urodzenia );

ALTER TABLE pracownicy ADD CONSTRAINT prac_email_uk UNIQUE ( email );

ALTER TABLE czynnosci
    ADD CONSTRAINT czyn_czyn_fk FOREIGN KEY ( id_czyn_nadrz )
        REFERENCES czynnosci ( id_czynnosci )
    DEFERRABLE;

ALTER TABLE czynnosci
    ADD CONSTRAINT czyn_kat_fk FOREIGN KEY ( id_kategorii )
        REFERENCES kategorie ( id_kategorii )
    DEFERRABLE;

ALTER TABLE czynnosci
    ADD CONSTRAINT czyn_mod_fk FOREIGN KEY ( id_modulu )
        REFERENCES moduly ( id_modulu )
    DEFERRABLE;

ALTER TABLE czynnosci
    ADD CONSTRAINT czyn_prac_fk FOREIGN KEY ( id_pracownika )
        REFERENCES pracownicy ( id_pracownika )
    DEFERRABLE;

ALTER TABLE moduly
    ADD CONSTRAINT mod_prac_fk FOREIGN KEY ( id_pracownika )
        REFERENCES pracownicy ( id_pracownika )
    DEFERRABLE;

CREATE OR REPLACE SYNONYM  czynnosci FOR bd2c074_app.czynnosci;

CREATE OR REPLACE SYNONYM  kategorie FOR bd2c074_app.kategorie;

CREATE OR REPLACE SYNONYM  moduly FOR bd2c074_app.moduly;

CREATE OR REPLACE SYNONYM  pracownicy FOR bd2c074_app.pracownicy;

CREATE OR REPLACE TRIGGER fkntm_czynnosci BEFORE
    UPDATE OF id_kategorii, id_modulu ON czynnosci
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Czynnosci is violated');
END;
/

CREATE OR REPLACE TRIGGER fknto_moduly BEFORE
    UPDATE OF id_pracownika ON moduly
    FOR EACH ROW
BEGIN
    IF :old.id_pracownika IS NOT NULL THEN
        raise_application_error(-20225, 'Non Transferable FK constraint MOD_PRAC_FK on table Moduly is violated');
    END IF;
END;
/

CREATE SEQUENCE czyn_id_czynnosci_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER czyn_id_czynnosci_trg BEFORE
    INSERT ON czynnosci
    FOR EACH ROW
    WHEN ( new.id_czynnosci IS NULL )
BEGIN
    :new.id_czynnosci := czyn_id_czynnosci_seq.nextval;
END;
/

CREATE SEQUENCE kat_id_kategorii_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER kat_id_kategorii_trg BEFORE
    INSERT ON kategorie
    FOR EACH ROW
    WHEN ( new.id_kategorii IS NULL )
BEGIN
    :new.id_kategorii := kat_id_kategorii_seq.nextval;
END;
/

CREATE SEQUENCE mod_id_modulu_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER mod_id_modulu_trg BEFORE
    INSERT ON moduly
    FOR EACH ROW
    WHEN ( new.id_modulu IS NULL )
BEGIN
    :new.id_modulu := mod_id_modulu_seq.nextval;
END;
/

CREATE SEQUENCE prac_id_pracownika_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER prac_id_pracownika_trg BEFORE
    INSERT ON pracownicy
    FOR EACH ROW
    WHEN ( new.id_pracownika IS NULL )
BEGIN
    :new.id_pracownika := prac_id_pracownika_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             4
-- CREATE INDEX                             5
-- ALTER TABLE                             14
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           4
-- CREATE TABLESPACE                        0
-- CREATE USER                              2
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
